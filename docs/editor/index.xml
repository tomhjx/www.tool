<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tool Kit â€“ Editor</title><link>/docs/editor/</link><description>Recent content in Editor on Tool Kit</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/docs/editor/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: CSS</title><link>/docs/editor/css/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/editor/css/</guid><description>
&lt;div id="editorcontainer0" class="td-box--height-full border w-100" >&lt;/div>
&lt;script src="https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/vs/loader.js">&lt;/script>
&lt;script>
$(function(){
var blockID = "editorcontainer0";
var modeId = 'css';
require.config({ paths: { vs: 'https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/vs' } });
require(['vs/editor/editor.main'], function () {
var editor = monaco.editor.create(document.getElementById(blockID), {
language: modeId
});
$.ajax({
type: 'GET',
url: "https://microsoft.github.io/monaco-editor/index/samples/sample.css.txt",
dataType: 'text',
error: function () {
console.log("load "+blockID+"'s sample fail.")
}
}).done(function (data) {
var oldModel = editor.getModel();
var newModel = monaco.editor.createModel(data, modeId);
editor.setModel(newModel);
if (oldModel) {
oldModel.dispose();
}
});
});
})
&lt;/script></description></item><item><title>Docs: HTML</title><link>/docs/editor/html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/editor/html/</guid><description>
&lt;div id="editorcontainer0" class="td-box--height-full border w-100" >&lt;/div>
&lt;script src="https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/vs/loader.js">&lt;/script>
&lt;script>
$(function(){
var blockID = "editorcontainer0";
var modeId = 'html';
require.config({ paths: { vs: 'https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/vs' } });
require(['vs/editor/editor.main'], function () {
var editor = monaco.editor.create(document.getElementById(blockID), {
language: modeId
});
$.ajax({
type: 'GET',
url: "https://microsoft.github.io/monaco-editor/index/samples/sample.html.txt",
dataType: 'text',
error: function () {
console.log("load "+blockID+"'s sample fail.")
}
}).done(function (data) {
var oldModel = editor.getModel();
var newModel = monaco.editor.createModel(data, modeId);
editor.setModel(newModel);
if (oldModel) {
oldModel.dispose();
}
});
});
})
&lt;/script></description></item><item><title>Docs: JavaScript</title><link>/docs/editor/javascript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/editor/javascript/</guid><description>
&lt;div id="editorcontainer0" class="td-box--height-full border w-100" >&lt;/div>
&lt;script src="https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/vs/loader.js">&lt;/script>
&lt;script>
$(function(){
var blockID = "editorcontainer0";
var modeId = 'javascript';
require.config({ paths: { vs: 'https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/vs' } });
require(['vs/editor/editor.main'], function () {
var editor = monaco.editor.create(document.getElementById(blockID), {
language: modeId
});
$.ajax({
type: 'GET',
url: "https://microsoft.github.io/monaco-editor/index/samples/sample.javascript.txt",
dataType: 'text',
error: function () {
console.log("load "+blockID+"'s sample fail.")
}
}).done(function (data) {
var oldModel = editor.getModel();
var newModel = monaco.editor.createModel(data, modeId);
editor.setModel(newModel);
if (oldModel) {
oldModel.dispose();
}
});
});
})
&lt;/script>
&lt;p>To learn more about &lt;a href="https://www.javascript.com/">JavaScript&lt;/a>&lt;/p></description></item><item><title>Docs: JSON</title><link>/docs/editor/json/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/editor/json/</guid><description>
&lt;div id="editorcontainer0" class="td-box--height-full border w-100" >&lt;/div>
&lt;script src="https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/vs/loader.js">&lt;/script>
&lt;script>
$(function(){
var blockID = "editorcontainer0";
var modeId = 'json';
require.config({ paths: { vs: 'https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/vs' } });
require(['vs/editor/editor.main'], function () {
var editor = monaco.editor.create(document.getElementById(blockID), {
language: modeId
});
$.ajax({
type: 'GET',
url: "https://microsoft.github.io/monaco-editor/index/samples/sample.json.txt",
dataType: 'text',
error: function () {
console.log("load "+blockID+"'s sample fail.")
}
}).done(function (data) {
var oldModel = editor.getModel();
var newModel = monaco.editor.createModel(data, modeId);
editor.setModel(newModel);
if (oldModel) {
oldModel.dispose();
}
});
});
})
&lt;/script>
&lt;p>To learn more about &lt;a href="https://www.json.org/json-en.html">JSON&lt;/a>&lt;/p></description></item><item><title>Docs: LESS</title><link>/docs/editor/less/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/editor/less/</guid><description>
&lt;div id="editorcontainer0" class="td-box--height-full border w-100" >&lt;/div>
&lt;script src="https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/vs/loader.js">&lt;/script>
&lt;script>
$(function(){
var blockID = "editorcontainer0";
var modeId = 'less';
require.config({ paths: { vs: 'https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/vs' } });
require(['vs/editor/editor.main'], function () {
var editor = monaco.editor.create(document.getElementById(blockID), {
language: modeId
});
$.ajax({
type: 'GET',
url: "https://microsoft.github.io/monaco-editor/index/samples/sample.less.txt",
dataType: 'text',
error: function () {
console.log("load "+blockID+"'s sample fail.")
}
}).done(function (data) {
var oldModel = editor.getModel();
var newModel = monaco.editor.createModel(data, modeId);
editor.setModel(newModel);
if (oldModel) {
oldModel.dispose();
}
});
});
})
&lt;/script></description></item><item><title>Docs: Markdown Mermaid</title><link>/docs/editor/mermaid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/editor/mermaid/</guid><description>
&lt;div class="container text-left">
&lt;div class="row">
&lt;div class="col">
&lt;textarea id="mermaideditorcontainer0" class="border w-100" style="height: 200px;" >&lt;/textarea>
&lt;div class="btn-group" role="group">
&lt;a class="btn btn-outline-primary" href="###" target="_blank" id="mermaideditorcontainer0LinkToView" >Link to view&lt;/a>
&lt;button type="button" class="btn btn-outline-primary" id="mermaideditorcontainer0CopyToIMG" >Copy Image&lt;/button>
&lt;a class="btn btn-outline-primary" id="mermaideditorcontainer0DownloadPNG" href="javascript:;" download="a.png" >Download PNG&lt;/a>
&lt;a class="btn btn-outline-primary" id="mermaideditorcontainer0DownloadSVG" href="javascript:;" download="a.svg" >Download SVG&lt;/a>
&lt;/div>
&lt;/div>
&lt;div id="mermaideditorcontainer0Output" class="col">&lt;/div>
&lt;/div>
&lt;/div>
&lt;script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js">&lt;/script>
&lt;script >
mermaid.initialize({startOnLoad:false});
$(function(){
console.log("2023-03-05 01:34:07")
var blockID = "mermaideditorcontainer0";
var input = document.getElementById(blockID);
var output = document.getElementById(blockID+'Output');
var linkToView = document.getElementById(blockID+'LinkToView');
var downloadSVG = $('#'+blockID+'DownloadSVG');
var downloadPNG = $('#'+blockID+'DownloadPNG');
var svg = null
var canvas = null
var img = new Image();
img.crossOrigin="anonymous";
img.onload=function(){
linkToView.href = 'https://toolkit.tomhjx.top/docs/editor/mermaid/#'+img.src
console.log("img.naturalWidth="+img.naturalWidth)
console.log("img.naturalHeight="+img.naturalHeight)
console.log("img.width="+img.width)
console.log("img.height="+img.height)
}
function draw() {
if (!canvas) {
canvas = document.createElement('canvas');
}
var imgH=img.height;
var imgW=img.width;
canvas.width = imgW;
canvas.height = imgH;
var ctx = canvas.getContext("2d");
ctx.drawImage(img, 0, 0);
return canvas;
}
input.onkeyup = function() {
mermaid.mermaidAPI.render('theGraph', input.value, function(svgCode) {
output.innerHTML = svgCode;
svg = output.querySelector('svg');
var svgData = new XMLSerializer().serializeToString(svg);
var svgDataBase64 = btoa(unescape(encodeURIComponent(svgData)))
var svgDataUrl = `data:image/svg+xml;charset=utf-8;base64,${svgDataBase64}`
img.src = svgDataUrl
console.log("svg.getBoundingClientRect.width="+svg.getBoundingClientRect().width)
console.log("svg.getBoundingClientRect.height="+svg.getBoundingClientRect().height)
console.log("svg.getBBox.width="+svg.getBBox().width)
console.log("svg.getBBox.height="+svg.getBBox().height)
img.width = svg.getBBox().width
img.height = svg.getBBox().height
});
}
downloadSVG.click(function(){
downloadSVG.attr("href", img.src)
});
downloadPNG.click(function(){
downloadPNG.attr("href", draw().toDataURL('image/png'))
downloadPNG.attr("download", self.crypto.randomUUID()+'.png')
});
})
&lt;/script>
&lt;p>To learn more about &lt;a href="https://mermaid.js.org/">Mermaid&lt;/a>&lt;/p></description></item><item><title>Docs: SCSS</title><link>/docs/editor/scss/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/editor/scss/</guid><description>
&lt;div id="editorcontainer0" class="td-box--height-full border w-100" >&lt;/div>
&lt;script src="https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/vs/loader.js">&lt;/script>
&lt;script>
$(function(){
var blockID = "editorcontainer0";
var modeId = 'scss';
require.config({ paths: { vs: 'https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/vs' } });
require(['vs/editor/editor.main'], function () {
var editor = monaco.editor.create(document.getElementById(blockID), {
language: modeId
});
$.ajax({
type: 'GET',
url: "https://microsoft.github.io/monaco-editor/index/samples/sample.scss.txt",
dataType: 'text',
error: function () {
console.log("load "+blockID+"'s sample fail.")
}
}).done(function (data) {
var oldModel = editor.getModel();
var newModel = monaco.editor.createModel(data, modeId);
editor.setModel(newModel);
if (oldModel) {
oldModel.dispose();
}
});
});
})
&lt;/script></description></item><item><title>Docs: TypeScript</title><link>/docs/editor/typescript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/editor/typescript/</guid><description>
&lt;div id="editorcontainer0" class="td-box--height-full border w-100" >&lt;/div>
&lt;script src="https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/vs/loader.js">&lt;/script>
&lt;script>
$(function(){
var blockID = "editorcontainer0";
var modeId = 'typescript';
require.config({ paths: { vs: 'https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/vs' } });
require(['vs/editor/editor.main'], function () {
var editor = monaco.editor.create(document.getElementById(blockID), {
language: modeId
});
$.ajax({
type: 'GET',
url: "https://microsoft.github.io/monaco-editor/index/samples/sample.typescript.txt",
dataType: 'text',
error: function () {
console.log("load "+blockID+"'s sample fail.")
}
}).done(function (data) {
var oldModel = editor.getModel();
var newModel = monaco.editor.createModel(data, modeId);
editor.setModel(newModel);
if (oldModel) {
oldModel.dispose();
}
});
});
})
&lt;/script>
&lt;p>To learn more about &lt;a href="http://www.typescriptlang.org/">TypeScript&lt;/a>&lt;/p></description></item></channel></rss>