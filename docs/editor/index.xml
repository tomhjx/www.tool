<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tool Kit â€“ Editor</title><link>/docs/editor/</link><description>Recent content in Editor on Tool Kit</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/docs/editor/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: JavaScript</title><link>/docs/editor/javascript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/editor/javascript/</guid><description>
&lt;p>Rich &lt;code>JavaScript&lt;/code> IntelliSense, Validation&lt;/p>
&lt;div id="editorcontainer0" class="td-box--height-full border w-100" >&lt;/div>
&lt;script src="https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/vs/loader.js">&lt;/script>
&lt;script>
$(function(){
var blockID = "editorcontainer0";
var modeId = 'javascript';
require.config({ paths: { vs: 'https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/vs' } });
require(['vs/editor/editor.main'], function () {
var editor = monaco.editor.create(document.getElementById(blockID), {
language: modeId
});
$.ajax({
type: 'GET',
url: "https://microsoft.github.io/monaco-editor/index/samples/sample.javascript.txt",
dataType: 'text',
error: function () {
console.log("load "+blockID+"'s sample fail.")
}
}).done(function (data) {
var oldModel = editor.getModel();
var newModel = monaco.editor.createModel(data, modeId);
editor.setModel(newModel);
if (oldModel) {
oldModel.dispose();
}
});
});
})
&lt;/script></description></item><item><title>Docs: TypeScript</title><link>/docs/editor/typescript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/editor/typescript/</guid><description>
&lt;div id="editorcontainer0" class="td-box--height-full border w-100" >&lt;/div>
&lt;script src="https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/vs/loader.js">&lt;/script>
&lt;script>
$(function(){
var blockID = "editorcontainer0";
var modeId = 'typescript';
require.config({ paths: { vs: 'https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/vs' } });
require(['vs/editor/editor.main'], function () {
var editor = monaco.editor.create(document.getElementById(blockID), {
language: modeId
});
$.ajax({
type: 'GET',
url: "https://microsoft.github.io/monaco-editor/index/samples/sample.typescript.txt",
dataType: 'text',
error: function () {
console.log("load "+blockID+"'s sample fail.")
}
}).done(function (data) {
var oldModel = editor.getModel();
var newModel = monaco.editor.createModel(data, modeId);
editor.setModel(newModel);
if (oldModel) {
oldModel.dispose();
}
});
});
})
&lt;/script></description></item></channel></rss>