<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tool Kit â€“ Editors</title><link>/editor/</link><description>Recent content in Editors on Tool Kit</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/editor/index.xml" rel="self" type="application/rss+xml"/><item><title>Editor: Markdown Mermaid</title><link>/editor/markdown-mermaid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/editor/markdown-mermaid/</guid><description>
&lt;div class="container text-left">
&lt;div class="row">
&lt;div class="col p-2">
&lt;div class="btn-group" role="group">
&lt;button class="btn btn-outline-primary btn-sm" id="preview" >Preview&lt;/button>
&lt;a class="btn btn-outline-primary btn-sm" id="downloadPNG" href="javascript:;" download="a.png" >Download PNG&lt;/a>
&lt;a class="btn btn-outline-primary btn-sm" id="downloadSVG" href="javascript:;" download="a.svg" >Download SVG&lt;/a>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="row">
&lt;div class="col">
&lt;textarea id="input" class="border w-100" style="height: 500px;" placeholder="please put the code here" >&lt;/textarea>
To learn more about &lt;a href="https://mermaid.js.org/" >Mermaid&lt;/a>
&lt;/div>
&lt;div id="output" class="col">&lt;/div>
&lt;/div>
&lt;/div>
&lt;script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js">&lt;/script>
&lt;script >
mermaid.initialize({startOnLoad:false});
$(function(){
var input = $('#input');
var output = $('#output');
var linkToView = $('#preview');
var downloadSVG = $('#downloadSVG');
var downloadPNG = $('#downloadPNG');
var svg = null
var canvas = null
var timeout = null
var svgDataUrl = ''
// define
var img = new Image();
img.crossOrigin="anonymous";
img.onload=function(){
console.log("img.naturalWidth="+img.naturalWidth)
console.log("img.naturalHeight="+img.naturalHeight)
console.log("img.width="+img.width)
console.log("img.height="+img.height)
}
function draw() {
if (!canvas) {
canvas = document.createElement('canvas');
}
var imgH=img.height;
var imgW=img.width;
canvas.width = imgW;
canvas.height = imgH;
var ctx = canvas.getContext("2d");
ctx.drawImage(img, 0, 0);
return canvas;
}
function renderMermaid() {
mermaid.mermaidAPI.render('theGraph', input.val(), function(svgCode) {
output.html(svgCode);
svg = output.find('svg')[0];
var svgData = new XMLSerializer().serializeToString(svg);
var svgDataBase64 = btoa(unescape(encodeURIComponent(svgData)))
svgDataUrl = `data:image/svg+xml;charset=utf-8;base64,${svgDataBase64}`
img.src = svgDataUrl
// console.log("svg.getBoundingClientRect.width="+svg.getBoundingClientRect().width)
// console.log("svg.getBoundingClientRect.height="+svg.getBoundingClientRect().height)
// console.log("svg.getBBox.width="+svg.getBBox().width)
// console.log("svg.getBBox.height="+svg.getBBox().height)
img.width = svg.getBBox().width
img.height = svg.getBBox().height
});
}
// bind
input.keydown(function(){
clearTimeout(timeout)
})
input.keyup(function(){
timeout = setTimeout(renderMermaid, 500)
})
linkToView.click(function(){
var win = window.open();
win.document.write('&lt;img src="' + img.src + '" />');
})
downloadSVG.click(function(){
downloadPNG.attr("href", svgDataUrl)
});
downloadPNG.click(function(){
downloadPNG.attr("href", draw().toDataURL('image/png'))
downloadPNG.attr("download", self.crypto.randomUUID()+'.png')
});
// init
input.val('graph TB\na-->b');
renderMermaid();
})
&lt;/script></description></item></channel></rss>